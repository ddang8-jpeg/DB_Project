
<head><title>Deleting Specie</title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $id

$id= $_POST['speciesID'];
// $ret = 1; //return values???

echo "<h2>Delete a species</h2>";

//Determine if any input was actually collected
if (empty($id)) {
   echo "specie ID is empty. <br><br>";
} else {
   echo "deleting specie ID:$id.<br><br>";

   //Prepare a statement that we can later execute. The ?'s are placeholders for
   //parameters whose values we will set before we run the query.
   if ($stmt = $conn->prepare("CALL DeleteProcedure(?)")) {

      //Attach the ? in prepared statements to variables (even if those variables
      //don't hold the values we want yet).  First parameter is a list of types of
      //the variables that follow: 's' means string, 'i' means integer, 'd' means
      //double. E.g., for a statment with 3 ?'s, where middle parameter is an integer
      //and the other two are strings, the first argument included should be "sis".
      $stmt->bind_param("i", $id);

       //Run the actual query
      if(!$stmt->execute()) {
         //Call to execute failed, e.g. because server is no longer reachable,
         //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
         echo $stmt->error;

      } else {

        //Store result set generated by the prepared statement
        $result = $stmt->get_result();
        echo "result of deletion if any: $result <br>";
        // return correct html results based on result??

        // if ($ret == 1) {
        //   // absent
        //   echo "specie ID can not be found.<br>";
        // } else {
        //   echo "specie removed.<br>";
        // }
        if(!empty($result)) {
          $result->free_result();
        }
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

}

//Close the connection created in open.php
$conn->close();
?>
</body>
