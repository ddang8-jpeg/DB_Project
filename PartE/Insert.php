
<head><title>PHP PreparedStatement example</title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $id

// $id= $_POST['speciesID'];
// $com_name= $_POST['commonName'];
// $sci_name= $_POST['sciName'];
// $esa_status= $_POST['esaStatus'];
// $isForeign= $_POST['isForeign'];
// $family= $_POST['family'];
// $grp= $_POST['grp'];
// $kingdom= $_POST['kingdom'];
$params = array_intersect_key($_POST, array_flip(array('speciesID', 'commonName','sciName','esaStatus','isForeign','family','grp','kingdom')));

//print the array of params
//foreach ($params as $param_name => $param_val) {
//   echo "Param: $param_name; Value: $param_val<br />\n";
//}
//echo "<br />";

echo "<h2>Insert new species</h2>";

//Determine if any input was actually collected
if (empty($params) || count($params) != 8) {
   echo "something is empty <br><br>";
} else {

   // echo $id."<br><br>";
   // echo $com_name."<br><br>";
   // echo $sci_name."<br><br>";
   // echo $esa_status."<br><br>";
   // echo $isForeign."<br><br>";
   // echo $family."<br><br>";
   // echo $grp."<br><br>";
   // echo $kingdom."<br><br>";

   //Prepare a statement that we can later execute. The ?'s are placeholders for
   //parameters whose values we will set before we run the query.
   if ($stmt = $conn->prepare("CALL InsertProcedure(?)")) {

      //Attach the ? in prepared statements to variables (even if those variables
      //don't hold the values we want yet).  First parameter is a list of types of
      //the variables that follow: 's' means string, 'i' means integer, 'd' means
      //double. E.g., for a statment with 3 ?'s, where middle parameter is an integer
      //and the other two are strings, the first argument included should be "sis".
      $stmt->bind_param('isssssss', $params[1], $params[2], $params[3], $params[4], $params[5], $params[6], $params[7],  $params[8]);

       //Run the actual query
      if(!$stmt->execute()) {
         //Call to execute failed, e.g. because server is no longer reachable,
         //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
         echo $stmt->error;

      } else {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();
         echo "result is: $result";
         if (($result)) {
	 
            echo "Specie added.<br>";
            
         } else {
            echo "This specie already exists.<br>";
         }

         try {
            //We are done with the result set returned above, so free it
            $result->free_result();
         } catch (\Throwable $th) {
            echo "<br>Free failed.<br>";
            echo $stmt->error;
         }
      
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

}

//Close the connection created in open.php
$conn->close();
?>
</body>
